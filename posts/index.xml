<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on CharlesRen</title>
    <link>https://charlesren.github.io/mysite-public/posts/</link>
    <description>Recent content in Posts on CharlesRen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>renccn@gmail.com (CharlesRen)</managingEditor>
    <webMaster>renccn@gmail.com (CharlesRen)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 14 Apr 2021 16:35:47 +0800</lastBuildDate><atom:link href="https://charlesren.github.io/mysite-public/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Nats的使用</title>
      <link>https://charlesren.github.io/mysite-public/nats%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 14 Apr 2021 16:35:47 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/nats%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>单机部署参考NATS Docker tutorial 集群部署参考nats_docker 单机部署 下载镜像 1 docker pull nats 启动服务 1 docker run -p 4222:4222 -p 8222:8222 -p 6222:6222 --name nats-server -d nats:latest 查看服务 通过 http://localhost:8222 查看服务状</description>
    </item>
    
    <item>
      <title>Grafana的安装及使用</title>
      <link>https://charlesren.github.io/mysite-public/grafana%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 18 Mar 2021 08:45:37 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/grafana%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
      <description>安装 1 docker pull grafana/grafana 准备存储空间 1 mkdir -p /data/grafana 启动 1 docker run -d -p 3000:3000 -v /data/grafana:/var/lib/grafana --name grafana grafana/grafana 登录 浏览器访问http://localhost:3000/login 默认用户名密码</description>
    </item>
    
    <item>
      <title>容器化部署Clickhouse及Tabix</title>
      <link>https://charlesren.github.io/mysite-public/%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2clickhouse%E5%8F%8Atabix/</link>
      <pubDate>Wed, 10 Mar 2021 16:07:54 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2clickhouse%E5%8F%8Atabix/</guid>
      <description>下载镜像 1 docker pull yandex/clickhouse-server 准备数据目录 clickhouse server 重要目录介绍 数据文件: /var/lib/clickhouse 配置文件: /etc/clickhouse-sever 日志文件: /var/log/clickhouse-server 以/data为外接存储为例,新建数据目录 1 mkdir -p /data/clickhouse 启动clic</description>
    </item>
    
    <item>
      <title>Centos使用ZFS文件系统</title>
      <link>https://charlesren.github.io/mysite-public/centos%E4%BD%BF%E7%94%A8zfs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 09 Mar 2021 14:47:50 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/centos%E4%BD%BF%E7%94%A8zfs%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</guid>
      <description>安装epel，zfs仓库 epel可以使用中科院开源软件协会等 mirrors.opencas.cn keys不用管，安装库里软件时会提示import 安装zfs 1 yum install zfs kernel</description>
    </item>
    
    <item>
      <title>Nginx&#43;keepalived实现apiserver高可用</title>
      <link>https://charlesren.github.io/mysite-public/nginx-keepalived%E5%AE%9E%E7%8E%B0apiserver%E9%AB%98%E5%8F%AF%E7%94%A8/</link>
      <pubDate>Tue, 09 Mar 2021 14:41:07 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/nginx-keepalived%E5%AE%9E%E7%8E%B0apiserver%E9%AB%98%E5%8F%AF%E7%94%A8/</guid>
      <description>cat /etc/keepalived/keepalived.conf 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 global_defs { router_id nginx_apiserver__test } vrrp_script chk_nginx { script &amp;#34;/etc/keepalived/check_nginx.sh&amp;#34; interval 5 weight 2 } vrrp_instance VI_1 { state BACKUP interface ens192 virtual_router_id 51 priority 99 advert_int 1 authentication { auth_type PASS auth_pass 1111 } virtual_ipaddress { 1.1.1.1/24 } } check_nginx.sh 脚本内</description>
    </item>
    
    <item>
      <title>新建用户且home目录在存储上</title>
      <link>https://charlesren.github.io/mysite-public/%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7%E4%B8%94home%E7%9B%AE%E5%BD%95%E5%9C%A8%E5%AD%98%E5%82%A8%E4%B8%8A/</link>
      <pubDate>Tue, 09 Mar 2021 14:37:31 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E6%96%B0%E5%BB%BA%E7%94%A8%E6%88%B7%E4%B8%94home%E7%9B%AE%E5%BD%95%E5%9C%A8%E5%AD%98%E5%82%A8%E4%B8%8A/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 groupadd -g 1100 xprice useradd -u 1101 -g 1100 -d /tmp/xprice xprice umount /data mkdir /home/xprice mount -a chown xprice:xprice /home/xprice chmod 750 /home/xprice usermod -m -d /home/xprice xprice cp /tmp/xprice/.* /home/xprice/ passwd xprice 或可尝试 groupadd -g</description>
    </item>
    
    <item>
      <title>Centos7.6离线安装docker</title>
      <link>https://charlesren.github.io/mysite-public/centos7.6%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85docker/</link>
      <pubDate>Tue, 09 Mar 2021 14:10:26 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/centos7.6%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85docker/</guid>
      <description>1、安装环境： 系统：CentOS Linux release 7.6.1810 (Core) Docker版本：18.09.8 2、下载离线安装包 docker 依赖包下载： containerd.io docker-ce-cli container-selinux 3、安装 1 2 3 4 rpm -ivh docker-ce-cli-18.09.8-3.el7.x86_64.rpm rpm -ivh container-selinux-2.107-3.el7.noarch.rpm rpm</description>
    </item>
    
    <item>
      <title>Yum源的使用方法</title>
      <link>https://charlesren.github.io/mysite-public/yum%E6%BA%90%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</link>
      <pubDate>Tue, 09 Mar 2021 11:30:03 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/yum%E6%BA%90%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ##################################### ##################################### ####### YUM 使用方法 （仅redhat 6.2) ########## ##################################### ##################################### # 在客户机/etc</description>
    </item>
    
    <item>
      <title>Centos连接存储</title>
      <link>https://charlesren.github.io/mysite-public/centos%E8%BF%9E%E6%8E%A5%E5%AD%98%E5%82%A8/</link>
      <pubDate>Tue, 09 Mar 2021 10:30:26 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/centos%E8%BF%9E%E6%8E%A5%E5%AD%98%E5%82%A8/</guid>
      <description>device-mapper 检查是否安装多路径软件包 device-mapper device-mapper-multipath 1 rpm -qa |grep device-mapper 安装device-mapper, device-mapper-multipath 1 yum install -y device-mapper device-mapper-multipath 生成多路径配置文件 1 mpathconf --enable 说明：生成配置文件是/etc/</description>
    </item>
    
    <item>
      <title>Nmon生成系统性能监控文件</title>
      <link>https://charlesren.github.io/mysite-public/nmon%E7%94%9F%E6%88%90%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E6%96%87%E4%BB%B6/</link>
      <pubDate>Tue, 09 Mar 2021 08:47:13 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/nmon%E7%94%9F%E6%88%90%E7%B3%BB%E7%BB%9F%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E6%96%87%E4%BB%B6/</guid>
      <description>用nmon命令生成系统性能监控文件 为了查看系统在一段时间内的性能，我们可以借助系统自身提供的性能监控命令来生成一份性能监控日志，然后用nmo</description>
    </item>
    
    <item>
      <title>Aix挂载光盘镜像</title>
      <link>https://charlesren.github.io/mysite-public/aix%E6%8C%82%E8%BD%BD%E5%85%89%E7%9B%98%E9%95%9C%E5%83%8F/</link>
      <pubDate>Tue, 09 Mar 2021 08:35:16 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/aix%E6%8C%82%E8%BD%BD%E5%85%89%E7%9B%98%E9%95%9C%E5%83%8F/</guid>
      <description>AIX 6.1 TL 4开始，AIX系统提供了一个loopmount命令，可直接mount ISO文件 挂载点是目录，不要用建立的文件系统做挂载点 挂镜像文件: 1</description>
    </item>
    
    <item>
      <title>Asus Z390i 9700k Hackintosh With OpenCore</title>
      <link>https://charlesren.github.io/mysite-public/asus-z390i-9700k-hackintosh-with-opencore/</link>
      <pubDate>Thu, 04 Mar 2021 17:39:57 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/asus-z390i-9700k-hackintosh-with-opencore/</guid>
      <description>硬件配置 配件 型号 价格 散热 海盗船h60 378.9 电源 海盗船sf600 698.9 机箱 追风者217e 700 主板 华硕rog z390i 1869 显示器 dell2419 1498.5 硬盘 三星970evo500g 879 硅</description>
    </item>
    
    <item>
      <title>Linux添加特权用户</title>
      <link>https://charlesren.github.io/mysite-public/linux%E6%B7%BB%E5%8A%A0%E7%89%B9%E6%9D%83%E7%94%A8%E6%88%B7/</link>
      <pubDate>Thu, 04 Mar 2021 17:07:43 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/linux%E6%B7%BB%E5%8A%A0%E7%89%B9%E6%9D%83%E7%94%A8%E6%88%B7/</guid>
      <description>在unix linux 系统中，系统通过uid 识别用户。 root 用户uid=0 gid=0，root用户是唯一的。 若其他用户与root用户uid,gid相同，就</description>
    </item>
    
    <item>
      <title>SSH免密登录</title>
      <link>https://charlesren.github.io/mysite-public/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</link>
      <pubDate>Thu, 04 Mar 2021 16:31:47 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</guid>
      <description>1.1.1.1主机名porxy 1.1.1.9主机名app2 1.生成及验证密钥 Linux keygen设置 Linux默认密钥在/root/.ssh/id</description>
    </item>
    
    <item>
      <title>自动尝试密码登录服务器</title>
      <link>https://charlesren.github.io/mysite-public/%E8%87%AA%E5%8A%A8%E5%B0%9D%E8%AF%95%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Thu, 04 Mar 2021 16:09:52 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E8%87%AA%E5%8A%A8%E5%B0%9D%E8%AF%95%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>方法一：Autologin脚本 适用于密码为一组密码中的某一个 cat /usr/local/bin/Autologin 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38</description>
    </item>
    
    <item>
      <title>高并发应用TCP等参数优化</title>
      <link>https://charlesren.github.io/mysite-public/%E9%AB%98%E5%B9%B6%E5%8F%91%E5%BA%94%E7%94%A8tcp%E7%AD%89%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/</link>
      <pubDate>Thu, 04 Mar 2021 15:34:02 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E9%AB%98%E5%B9%B6%E5%8F%91%E5%BA%94%E7%94%A8tcp%E7%AD%89%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/</guid>
      <description>1 2 cp /etc/sysctl.conf /etc/sysctl.conf.bak vim /etc/sysctl.conf net.ipv4.tcp_tw_reuse = 1 net.ipv4.tcp_fin_timeout = 30 net.ipv4.ip_local_port_range = 1024 65000 net.ipv4.tcp_max_tw_buckets = 45000 1 2 3 4 5 6 sysctl -p /etc/sysctl.conf sysctl -w net.ipv4.route.flush=1 sysctl -a |grep net.ipv4.tcp_tw_reuse sysctl -a |grep net.ipv4.tcp_fin_timeout sysctl -a |grep net.ipv4.tcp_max_tw_buckets sysctl -a |grep net.ipv4.ip_local_port_range 1 2 cp /etc/security/limits.conf /etc/security/limits.conf.bak vim /etc/securiy/limits.conf soft nofile 65530 hard nofile 65530</description>
    </item>
    
    <item>
      <title>Shell学习</title>
      <link>https://charlesren.github.io/mysite-public/shell%E5%AD%A6%E4%B9%A0/</link>
      <pubDate>Thu, 04 Mar 2021 14:11:09 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/shell%E5%AD%A6%E4%B9%A0/</guid>
      <description>变量嵌套 1 2 3 4 5 6 7 8 [root@renccblj ~]# a=b [root@renccblj ~]# c=a [root@renccblj ~]# echo ${!c} b [root@renccblj ~]# [root@renccblj ~]# eval echo $&amp;#34;${c}&amp;#34; a [root@renccblj ~]# Aix下只能用 eval 算术精度 取小数点后两位 1 2 3 4 5 6 [root@renccblj ~]# echo &amp;#34;scale=2; 5/3 &amp;#34; | bc 1.66 [root@renccblj ~]# [root@renccblj</description>
    </item>
    
    <item>
      <title>Aria2 on Docker</title>
      <link>https://charlesren.github.io/mysite-public/aria2-on-docker/</link>
      <pubDate>Wed, 03 Mar 2021 16:17:13 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/aria2-on-docker/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  [root@192 conf]# cat aria2.sh #mkdir -p ~/aria2/conf #cd ~/aria2/conf #touch aria2.conf #touch aria2.session #touch aria2.session #touch dht.dat #touch dht6.dat docker run -d \ --name aria2-with-webui \ -p 6800:6800 \ -p 6880:80 \ -v /data/Downloads:/data \ -v ~/aria2/conf:/conf \ -e PGID=0 \ -e PUID=0 \ abcminiuser/docker-aria2-with-webui:latest-ng   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  [root@192 conf]# cat aria2.</description>
    </item>
    
    <item>
      <title>HP3636打印机设置</title>
      <link>https://charlesren.github.io/mysite-public/hp3636%E6%89%93%E5%8D%B0%E6%9C%BA%E8%AE%BE%E7%BD%AE/</link>
      <pubDate>Wed, 03 Mar 2021 16:12:43 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/hp3636%E6%89%93%E5%8D%B0%E6%9C%BA%E8%AE%BE%E7%BD%AE/</guid>
      <description>https://weibo.com/tv/v/IhQSsEBsS?fid=1034:4442542427565493 无线打印机直连打印方法 https://v.youku.com/v_show/id_XMzc1MzY4MzA0MA==.html?spm=a2hzp.8244740.0.0 长按打印机的叉还有WiFi键 电源灯闪烁松手哈 然后手机直接连接打印机的WiFi哈 然后打开手机设置找到wifi名字是D</description>
    </item>
    
    <item>
      <title>Plex on Docker</title>
      <link>https://charlesren.github.io/mysite-public/plex-on-docker/</link>
      <pubDate>Wed, 03 Mar 2021 16:07:25 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/plex-on-docker/</guid>
      <description>1  docker run -d --restart=always --net=host --privileged --name plex -h rencc -v /Users/rencc/Plex:/config -v /Users/rencc/Downloads:/data -p 32400:32400 -e PUID=501 -e PGID=20 -e TZ=Asia/Shanghai linuxserver/plex   </description>
    </item>
    
    <item>
      <title>Gitlab容器化部署</title>
      <link>https://charlesren.github.io/mysite-public/gitlab%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Wed, 03 Mar 2021 15:39:39 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/gitlab%E5%AE%B9%E5%99%A8%E5%8C%96%E9%83%A8%E7%BD%B2/</guid>
      <description>OS: Redhat 7.6 0：Docker 安装 需要如下4个安装包。（container-selinux取代老版本docker-selinux） docker-ce-18.09.0-3.el7.x86_64.rpm containerd.io-1.2.0-3.el7.x86_64.rpm docker-ce-cli-18.09.0-3.el7.x86_64.rpm container-selinux-2.74-1.el7.noarch.rpm 1.gitlab 镜像准备</description>
    </item>
    
    <item>
      <title>理想的住宅</title>
      <link>https://charlesren.github.io/mysite-public/%E7%90%86%E6%83%B3%E7%9A%84%E4%BD%8F%E5%AE%85/</link>
      <pubDate>Wed, 03 Mar 2021 10:28:37 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E7%90%86%E6%83%B3%E7%9A%84%E4%BD%8F%E5%AE%85/</guid>
      <description>随心所欲，不受任何限制，包括，金钱，地理位置，气候条件，地形等等，任何条件都能满足 北纬18度左右（阳光充足，气候适宜），半山（海拔高，不会太</description>
    </item>
    
    <item>
      <title>热水循环</title>
      <link>https://charlesren.github.io/mysite-public/%E7%83%AD%E6%B0%B4%E5%BE%AA%E7%8E%AF/</link>
      <pubDate>Wed, 03 Mar 2021 10:25:05 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E7%83%AD%E6%B0%B4%E5%BE%AA%E7%8E%AF/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 http://www.chiphell.com/thread-1340339-1-1.html至少全6分管，末端</description>
    </item>
    
    <item>
      <title>家庭强电</title>
      <link>https://charlesren.github.io/mysite-public/%E5%AE%B6%E5%BA%AD%E5%BC%BA%E7%94%B5/</link>
      <pubDate>Wed, 03 Mar 2021 10:18:28 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E5%AE%B6%E5%BA%AD%E5%BC%BA%E7%94%B5/</guid>
      <description>强电箱配置 1 2 3 4 5 6 7 8 9 10 11 12 http://post.smzdm.com/p/75172/ http://www.chiphell.com/thread-1358982-1-1.html http://www.chiphell.com/thread-1339180-1-4.html http://www.chiphell.com/thread-1338417-1-4.html http://www.chiphell.com/thread-1265501-1-10.html http://www.chiphell.com/thread-1313120-1-9.html http://www.chiphell.com/thread-1321814-1-8.html http://www.chiphell.com/thread-1268929-1-8.html http://www.chiphell.com/thread-1321847-2-5.html http://www.chiphell.com/thread-1340552-1-5.html http://www.chiphell.com/thread-1340264-1-5.html http://www.chiphell.com/thread-1040552-3-1.html 低压断路器产品 1 2 http://www.chiphell.com/thread-1354102-1-1.html http://www.chiphell.com/thread-1040552-1-1.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30</description>
    </item>
    
    <item>
      <title>家庭网络规划</title>
      <link>https://charlesren.github.io/mysite-public/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92/</link>
      <pubDate>Wed, 03 Mar 2021 10:13:00 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E5%AE%B6%E5%BA%AD%E7%BD%91%E7%BB%9C%E8%A7%84%E5%88%92/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 光猫---路由----核心交换---交换/AP/..... 思路： 路由一般放弱电箱</description>
    </item>
    
    <item>
      <title>R7000刷merlin固件</title>
      <link>https://charlesren.github.io/mysite-public/r7000%E5%88%B7merlin%E5%9B%BA%E4%BB%B6/</link>
      <pubDate>Wed, 03 Mar 2021 09:48:05 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/r7000%E5%88%B7merlin%E5%9B%BA%E4%BB%B6/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 原厂 先刷中间R7000_378.52-2.chk 恢复出厂 dual wan load banlance 3:1 较1:1网速快 ss 全局代理</description>
    </item>
    
    <item>
      <title>保险配置</title>
      <link>https://charlesren.github.io/mysite-public/%E4%BF%9D%E9%99%A9%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Wed, 03 Mar 2021 09:18:00 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E4%BF%9D%E9%99%A9%E9%85%8D%E7%BD%AE/</guid>
      <description>重疾 确诊立即给付 中老年买到终身 多次理赔 豁免 医疗险做重疾额度补充 孩子重疾买到30岁，白血病，肿瘤多买 寿险 买了寿险可以不买意外险，因为寿险包含疾</description>
    </item>
    
    <item>
      <title>Sina行情获取</title>
      <link>https://charlesren.github.io/mysite-public/sina%E8%A1%8C%E6%83%85%E8%8E%B7%E5%8F%96/</link>
      <pubDate>Wed, 03 Mar 2021 09:02:21 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/sina%E8%A1%8C%E6%83%85%E8%8E%B7%E5%8F%96/</guid>
      <description>参考 https://blog.csdn.net/luanpeng825485697/article/details/78442062 https://blog.csdn.net/wqy161109/article/details/80052716 请求http://hq.sinajs.cn/list=sh601006 返回： var hq_str_sh601006=&amp;ldquo;大秦铁路</description>
    </item>
    
    <item>
      <title>学股笔记</title>
      <link>https://charlesren.github.io/mysite-public/%E5%AD%A6%E8%82%A1%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 01 Mar 2021 16:23:37 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E5%AD%A6%E8%82%A1%E7%AC%94%E8%AE%B0/</guid>
      <description>矩形虽为持续形态，通常只是休整，但需注意其是否会演变为反转形态。如双重或三重底或顶。尤其是在大趋势持续很长时间的时候。 矩形模式中，交易量是值</description>
    </item>
    
    <item>
      <title>定投ETF</title>
      <link>https://charlesren.github.io/mysite-public/%E5%AE%9A%E6%8A%95etf/</link>
      <pubDate>Mon, 01 Mar 2021 16:18:42 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E5%AE%9A%E6%8A%95etf/</guid>
      <description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70</description>
    </item>
    
    <item>
      <title>交易思考</title>
      <link>https://charlesren.github.io/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/</link>
      <pubDate>Mon, 01 Mar 2021 09:52:33 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/</guid>
      <description>Trading checklist 交易你的计划，计划你的交易（每只股挂好买单，止损单，想好各种可能，盘中不改计划，极力避免手动操作） 小周期大周期 等待机会，占据有利位置（止</description>
    </item>
    
    <item>
      <title>Deploy Yugabyte On K8s</title>
      <link>https://charlesren.github.io/mysite-public/deploy-yugabyte-on-k8s/</link>
      <pubDate>Tue, 23 Feb 2021 10:42:13 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/deploy-yugabyte-on-k8s/</guid>
      <description>添加helm repo 1 2 3 helm repo add yugabytedb https://charts.yugabyte.com helm repo update helm search repo yugabytedb/yugabyte 准备docker image docker pull yugabytedb/yugabyte:2.5.1.0-b153 kind 集群需导入镜像 kind load yugabytedb/yugabyte:2.5.1.0-b153 &amp;ndash;name yugabyte 部署yugabyte 1 2 kubectl create namespace yb-demo helm install yb-demo yugabytedb/yugabyte --namespace yb-demo --wait</description>
    </item>
    
    <item>
      <title>Centos8工作环境配置</title>
      <link>https://charlesren.github.io/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Mon, 22 Feb 2021 09:19:56 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</guid>
      <description>配置网络 查看并连接设备 nmcli d nmcli d connect xxx 查看并配置连接 nmcli c nmcli c modify ens192 ipv4.address x.x.x.x/24 ipv4.gateway x.x.x.x ipv4.dns 8.8.8.8 ipv4.method manual connection.autoconnect yes 114.114.114.114 cat not resolve gcr.io etc, but 8.8.8.8 can 启用连接 nmcli c reload nmcli c up xxx Centos8 源设置 1 dnf config-manager --add-repo https://mirrors.aliyun.com/repo/Centos-8.repo 安</description>
    </item>
    
    <item>
      <title>ASUS ROG STRIX Z390 I GAMING Hakintosh</title>
      <link>https://charlesren.github.io/mysite-public/asus-rog-strix-z390-i-gaming-hakintosh/</link>
      <pubDate>Wed, 20 Jan 2021 10:50:53 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/asus-rog-strix-z390-i-gaming-hakintosh/</guid>
      <description>配置如下: 散热 海盗船h60 378.9 电源 海盗船sf600 698.9 机箱 追风者217e 700 主板 华硕rog z390i 1869 显示器 dell2419 1498.5 硬盘 三星970evo500g 879 硅脂 猫头鹰n</description>
    </item>
    
    <item>
      <title>Kodi的使用</title>
      <link>https://charlesren.github.io/mysite-public/kodi%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 20 Jan 2021 09:07:43 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/kodi%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>celedhrim版kodi-server centos 系统 1 2 docker pull celedhrim/kodi-server docker run -d --restart=&amp;#34;always&amp;#34; --net=host --privileged -v /tmp/kodi:/opt/kodi-server/share/kodi/portable_data celedhrim/kodi-server 不加&amp;ndash;privileged 容器会不断重启,docke</description>
    </item>
    
    <item>
      <title>安装emby</title>
      <link>https://charlesren.github.io/mysite-public/%E5%AE%89%E8%A3%85emby/</link>
      <pubDate>Tue, 19 Jan 2021 17:07:06 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/%E5%AE%89%E8%A3%85emby/</guid>
      <description>docker pull emby/embyserver 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # cat emby.sh docker run -d \ --name embyserver \ --volume /root/emby/programdata:/config \ --volume /data/Entbak:/mnt/Entbak \ --volume /data/Video:/mnt/Video \ --volume /data/Moives:/mnt/Moives \ --volume /data/Pictures:/mnt/Pictures \ --volume /data/Music:/mnt/Music \ --volume /data/Photos:/mnt/Photos \ --volume /data/Private:/mnt/Private \ --volume /data/TV:/mnt/TV \ --publish 8096:8096 \ --publish 8920:8920 \ --env UID=0 \ --env GID=0</description>
    </item>
    
    <item>
      <title>Gitlab的使用</title>
      <link>https://charlesren.github.io/mysite-public/gitlab%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 19 Jan 2021 16:09:22 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/gitlab%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>0.把用户是公钥导入gitlab；hosts文件加入git服务器解析 Attention: 注意remote url类型 1.在需要保存仓库的父目录下 1 2 3 4 5 6 7 8</description>
    </item>
    
    <item>
      <title>Forced to Change Expired Password When Using Ssh Key</title>
      <link>https://charlesren.github.io/mysite-public/forced-to-change-expired-password-when-using-ssh-key/</link>
      <pubDate>Fri, 08 Jan 2021 11:05:02 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/forced-to-change-expired-password-when-using-ssh-key/</guid>
      <description>I am working in an environment where I have an account on multiple linux machines where accounts and passwords are managed independently (no active directory/LDAP/etc) and passwords expire every 30 days. As such, I thought it would be easier to manage my authentication using ssh keys. I am able to authenticate using my ssh keys just fine. However, I found that when my password expires, I am prompted to change</description>
    </item>
    
    <item>
      <title>Centos8安装VNC</title>
      <link>https://charlesren.github.io/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/</link>
      <pubDate>Mon, 30 Nov 2020 16:52:55 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/</guid>
      <description>Centos8 配置VNC 安装 TigerVNC server 1 dnf install tigervnc-server 防火墙放行VNC服务 1 2 3 firewall-cmd --add-service=vnc-server --permanent firewall-cmd --reload 配置VNC 用户 vi /etc/tigervnc/vncserver.users 添加用户，如： :1=root 配置分辨率 mkdir $HOME/.vnc vi $HOME/.vnc/config 1 geometry=1920x1080 设置VNC用户密码 1</description>
    </item>
    
    <item>
      <title>hugo的使用</title>
      <link>https://charlesren.github.io/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 26 Nov 2020 16:45:15 +0800</pubDate>
      <author>renccn@gmail.com (CharlesRen)</author>
      <guid>https://charlesren.github.io/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>参考 https://www.adamormsby.com/posts/how-to-set-up-a-hugo-site-on-github-pages-with-submodules/ 安装hugo github 下载linux安装包 注意：下载extend版 解压后把二进制文件复制到/usr/bin/ create new site 1 2 #### hugo new site [SITE_NAME] hugo new site mysite github 建新</description>
    </item>
    
  </channel>
</rss>
