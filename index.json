[{"categories":["Investment","Trade"],"content":" 矩形虽为持续形态，通常只是休整，但需注意其是否会演变为反转形态。如双重或三重底或顶。尤其是在大趋势持续很长时间的时候。 矩形模式中，交易量是值得观察的重要线索。 如果上冲时交易量重，而下撤时交易量轻，那么该形态可能是上升趋势的持续形态，如果较重的交易量发生在向下运动这一边，那么这可以看成趋势正在反转的警讯。 摆动指数在横向交易区间特别有用（如矩形）。但一旦发生突破，其效用便会下降。 时刻注意风险。永远堤防突发情况，或判断失误造成的灾难。 研究各个市场的具体特性。对数字驱动的指标进行调整优化，以适应市场。 对各个股票也需研究其历史，总结其“习性”。 研究技术可靠性指数（对具体的交易对象）。 相互验证：各种分析手段，技术指标信号相互参照，保证它们中的大部分相互验证，指向共同的方向。另外各指标指数等，也有时间维度。 也需要根据市场不同的环境，参考选择不同的指标，评估指标权重。（注意指标适用范围） 相关市场所组成的群类中，各个市场倾向于同进同止。同理：相互背离。（可考虑做空） 对具体的交易对象，可研究各种指标在其历史中的表现，选择最优指标。 对图顺序: 长——中——短 不能只见树木，不见森林 市场总览——行业——个别交易品种 温和的上涨（45度趋势线或较平），一段时间后，可能带来人气，而突然加速上涨、 图标分析不领先于市场。 根据灵敏度要求调整时间跨度。（当市场急剧上升，从而价格相对地处于“高处不胜寒”的境地，我们可以缩短时间跨度，使系统更灵敏；当市场横向伸展时扩大时间跨度） 没有标准答案 相信自己 当有某些想法，有些依据经思考觉得合理时，大胆运用，不必寻找认同。事实上，卓越的人，伟人发明创造并不是循规蹈矩 摆动指数必须附属于基本的趋势分析。 从这个意义上说，它只是一种第二位的指标。 市场主要趋势是压倒一切的，顺着它的方向交易有重要意义。 ","date":"2021-03-01","objectID":"/mysite-public/%E5%AD%A6%E8%82%A1%E7%AC%94%E8%AE%B0/:0:0","tags":null,"title":"学股笔记","uri":"/mysite-public/%E5%AD%A6%E8%82%A1%E7%AC%94%E8%AE%B0/"},{"categories":["Investment","Trade"],"content":" 随着证券市场的发展，股票数量越来越多，选股也越来越困难， 选对了股票能得到超额利润，选错了则有可能亏损， 我不想赌博，也不想博彩，我需要确定的稳定收益， 自知脑笨，手脚又不灵活，故选择50ETF作为跟踪目标， 相信指数从长期来看总归是向上的，不可能发生退市或摘牌的风险， 什么是50ETF? 这只由华夏基金管理有限公司推出的上证50ETF，是中国内地首只ETF产品,交易代码510050 交易型开放式指数基金(ETF)，是指经依法募集的，投资特定证券指数所对应组合证券的开放式基金，其基金份额用组合证券进行申购、赎回，并在上海证交所上市交易。 业内人士指出，上证50ETF兼容了开放式基金和封闭式基金的优点，具有交易成本低廉、管理费用较少、信息完全公开、标的权威可信的优势。 定投数量： 设每月200份（也可根据你的账务状况设300或400不等）， 操作原则： 上证指数目前最高为6124.04点，最低为95.79点 （6124.04+95.79）/2＝3109.92点，设此点位为中轴线。 我们设3109.92点以上为高位区，以下为低位区， 我们的定投计划只在低位区进行，超过3109.92则停止定投， 操作细则： 指数区间，….定投份数 2733.15-3109.92，100 2356.38-2733.14，200 1979.62-2356.37，300 1602.85-1979.61，400 1226.09-1602.84，500 849.32-1226.08，600 演变： 假设上证指数又创出8000点的新高，则： （8000+95.79）/2＝4047.90点，重新设此点为中轴进行操作，以此类推。 投入总金额： 假设今年30岁，期望给自己做一份养老金计划，则需定投30年（60岁退休）， 教条的算，每月500*12＝每年6000元*30＝180000元， 按上述的操作原则，在中轴线以上是不投的，死板算法则需投入18万*1/2＝9万， 而因为指数是不断地向上发展，中轴线也在向上修正， 故实际投入肯定大于9万，一般不会超过12万（18万*2/3） 以12万为标准，月定投500元，实际投入约为月333.33元， 如计划月定投300元，实际投入约为月200元。 333.33元与200元应该不会对你的生活产生重大影响，也是我们有能力承受的。 并且我们知道绝不会输，一定会赢！只需时间,我们有时间。 表一说明： 1， 买入价2.300元是假设价，当然是越便宜越好，以下的价格是根据上证指数的上升趋势换算出来的，作为大致的依照， 2， 保本价，是同档次价格的卖出保本价格，设费率为千分之2.5，实际可能会低一些， 3， 2%，这是以后要操作T+0的至少价格，已包括费率， 4， 股数，定投数量一律为200份（假设） 5， 持股数，是累计数量，长线持仓，并作为T+0或反T+0的底仓或种子筹码。 50ETF网格化操作计划： 以第一笔买入价为基础，每下跌5%补仓，一直补到0.707（相当于998点），共需资金约5万元，在此假设998点为底部。 上涨超过至少2%时考虑卖出，究竟多少价格才卖根据自己的操作经验来定， 即：实际买入价要低于表中买入价，实际卖出价要高于2%价， 表二中是以2000元为假设金额（费率起步价为5元）可以同比例放大，根据自己不同情况， 通过机械化的操作不断地降低成本， 有种子筹码时考虑T+0操作，对大势判断有把握时进行反T+0操作， 每月的操作根据定投计划留下种子筹码， 此操作的最大代价是套牢5万元（指数打回998点）并坚信一定会解放！ 目标是：不断地降低成本，不断地增加筹码！ 中轴线以上时，不增加筹码或是只增加0成本筹码。 本人股票知识有限，且教训多于经验，没有能力去捕捉黑马，也没有能力对别人提出买卖建议， 在此只是提供一种思路，供有兴趣的朋友交流。 也希望看贴的朋友能有好的建议，或对上述设想中的漏洞提出批评，以利于改进与完善。 关于买点比较容易设定，只要根据自己的心理价位，在某个区域起一路建仓即可， 关于卖点较有难度，因为必须判断哪儿才是“高点”而每个人心中的“高点”又是不一样的，比如：这波冲击6124点，在6124点买入的朋友当然是看好8000点或10000点时才买的，实际走势与我们的期望值往往不同，究竟怎么处理才好呢？ 我是这样考虑的： 手中的长线筹码抛不抛都无所谓，即使抛了也一定要补回的！ 选择抛出的“点”一定得满足：有充分的把握能够安全补回！ 至于点数不重要，有把握补回才是最要紧的， 抛出后未能补回来这是最要命的事，假设你在6001点卖出，而指数直奔8000点而去，这时你怎么办？追涨？这是不允许的！而不追又可能踏空，故无论如何不能陷入这种困境。 原则必须牢记：我们是要持仓20年的！ 每个人对走势判断均不一样，很难有量化的东西作为标杆， 假如是我在操作，假如前面已建立了54个月的底仓， 我会在2008年1月25日下午2：30全线清仓！ 因为这一周的周K线传递的信息是：前期的4778点被击穿，一个下降通道正在构成， 尽管不能说一定会大幅度地下跌，但比较有把握能在适当低位补回， 如果吃不准的话，宁可不动。 我前面所说的在中轴线以上停止建长线仓，只做短线的含义就是： 只要有把握补回来，我就卖！不断地折腾，扩大战果（增加数量）或降低持仓成本。 关于卖出：自己对什么最熟悉，最有把握就依照它来，每人情况各不相同，没有公式可寻。 ","date":"2021-03-01","objectID":"/mysite-public/%E5%AE%9A%E6%8A%95etf/:0:0","tags":null,"title":"定投ETF","uri":"/mysite-public/%E5%AE%9A%E6%8A%95etf/"},{"categories":["Trade","Investment"],"content":"Trading checklist 交易你的计划，计划你的交易（每只股挂好买单，止损单，想好各种可能，盘中不改计划，极力避免手动操作） 小周期大周期 等待机会，占据有利位置（止损及期望盈利比率） 适时离开市场 问问自己能否在止损点退出 入场的理由，策略 有选择的交易，弱水三千，只取一瓢饮 关键点买入（趋势刚刚开始时买入，避免早买时等待的时间成本，交易其它股票机会成本） 放弃平庸是机会 问自己打算持有多久 心法 危机发生后建仓：时间和空间间隔。如间隔10% ，间隔一个月 趋势交易与市场周期及投资者钟摆式摆动融合 向下的风险，也有向上的风险（踏空） 没有杠杆，时间是投资的朋友，加了杠杆，时间便成了投资的敌人。 只有不怕错过，才能真正抓住好的投资机会。 你可以做错很多事，但只要做对了一件事—也就是砍掉亏损头寸—你就能在这一行赚很多钱 长期重仓卧倒好公司，在不同标的间切换，找不到好机会时退出 ？ 坚持一直方法，等风来？ 人只能赚自己认知范围之内的钱，市场天天开，钱赚不完 降低交易频率，日线上交易，提前计划，日内尽量不做决断，放弃平庸机会（） 日线图与分时图周期差别太大，日线与60分钟更接近 建议不要看20日以下的均线。因为均线是比较滞后的指标，周期看太小会被震荡玩死 负面清单，不做什么 观点被市场证实后再交易，不能仅仅根据自己的看法交易 看图四要素，量价时间周期 预期 交易假设 市场走势 交易假设很重要，更重要的是应对。无论市场涨跌都要有应对措施，做好计划。 计划你的交易，交易你的计划。 跟随市场，让市场指导操作，而不是预期。 当预期与市场不一致，无论市场对自己有利与否，紧盯市场，跟随市场，及时执行计划； 感悟拿到市场去验证 选股 基本面比较好的标准是：ROE≥15%、资产负债率≤50%、现金收入比≥100%、营业收入同比增长率≥15%、审计结论为“标准无保留意见”。同时，股票总市值大于150亿元. 港股通 明显基金经理 买 投机严格价升加仓，止损 长期，分批买，低点支撑位可首笔买，不需严格等趋势确认，如首笔下跌，加仓拉开间隔，最好10点以上 买入时记录投资逻辑是什么 逻辑驱动买入，逻辑驱动卖出 是否买入 买入 价格 考虑短期市场整体走势 收到关键点位再买入？ 尽量右侧交易，下跌盯盘提醒股价，跌破关键点后，下突破该点位的智能交易买入单 买进后，操作不算完，下好或修改止损单，下一次或两次买进单，阶段性止盈单 假设暴跌怎么办，买什么 择时：好生意好公司好与技术分析结合 大部分时间震荡，或下跌，少时间涨，且长的快，定价突破后买入，不错过 机构持仓 看好后，持续跟踪，每次突破后都买，不要错过机会 ","date":"2021-03-01","objectID":"/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/:0:0","tags":null,"title":"交易思考","uri":"/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/"},{"categories":["Trade","Investment"],"content":"开仓 市场整体低迷，谨慎开仓 什么时候进攻，什么时候防守 要右侧交易尽量避免左侧交易。 水平窄幅震荡突破，上涨突破时买，突破要带量。尽量避免v形转向上买，如果买带量 仓位低时指数类基金，大白马可以水平稍向上时交易，或支撑位附近稍高点买入（非上涨时买入时，量要少） 如果一定要左侧买入总仓位要低，单次买入要低，加仓时间幅度要拉开，同时拉大时间周期 大趋势向上: 价格下跌后企稳，窄幅震荡一段时间在震荡区间底部（波段或反弹）亏损后或三天无盈利，赶紧退出 下跌一段时间，仍在下跌中，买在最低点下方，20周或更长周期均线位置（赌位置）（白马股）亏损后或三天无盈利，赶紧退出 窄幅震荡一段时间，波动小，底部微微抬升时买入 突破，亏损后或三天无盈利，赶紧退出 横盘: 1.窄幅震荡一段时间，波动小，底部微微抬升时买入 趋势策略/震荡策略 顺势、轻仓、持赢、止损 做反弹有一个重要原则，就是不要买在放量成交的区域，因为你如果和80%以上的人成本都差不多，就一定挣不到钱，一定要比80%的人买的更便宜10-20%才可以，如果买不到就放弃。 v形反转，或下跌时间不够长的反转，反转时只买入一次，设紧密止损？反弹到关键点,抛出部分，突破后再买回来？ v形反正结合支撑买入？ 回调深度够，时间不够，只买一笔？ 如买入后下跌，后续再买入，都当重新开仓，需满足买点条件 v形反转买入，短期盈利多部分止盈退出 ","date":"2021-03-01","objectID":"/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/:0:1","tags":null,"title":"交易思考","uri":"/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/"},{"categories":["Trade","Investment"],"content":"加仓 不在亏损时加仓，除非拟加仓点为新买点或计划好的定投/分批买入 不要试图摊薄成本，除非交易法则告诉该买入 加仓后为新头寸单独设立止损点 集中加仓，分批加仓？ 分批加仓，拉开距离？ 海龟加仓：每支股票4次买入 卖 趋势结束退出.但短期过猛，且有走坏趋势，可否在通道顶端或其它点卖出部分，走势正常后补回来 利弗莫尔卖加回补机制：正常回调（缩量，幅度有限），冲高大幅回落果断离场，后续市场正常，进场，要有回补机制；一次性事件引发短期大幅度冲高，而事件对基本面音响有不确定性，果断离场 ","date":"2021-03-01","objectID":"/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/:0:2","tags":null,"title":"交易思考","uri":"/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/"},{"categories":["Trade","Investment"],"content":"止损 考虑因素 刚买与已有丰厚盈利 打算持有时间长短 现有仓位水平高低 长期资本，短期资本 股价与成交量的变化情况？ 闪动危险信号的时候 严格止损 止损要快。 时间止损 突破关键点赶紧行动，行动后亏损，或三交易日无盈利退出 动态止损 头寸管理 单笔交易仓位是自动的，总体仓位可以加以控制 交易记录 周期长，中，短 趋势，价值 买入逻辑 ","date":"2021-03-01","objectID":"/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/:0:3","tags":null,"title":"交易思考","uri":"/mysite-public/%E4%BA%A4%E6%98%93%E6%80%9D%E8%80%83/"},{"categories":["Tools"],"content":"添加helm repo helm repo add yugabytedb https://charts.yugabyte.com helm repo update helm search repo yugabytedb/yugabyte 准备docker image docker pull yugabytedb/yugabyte:2.5.1.0-b153 kind 集群需导入镜像 kind load yugabytedb/yugabyte:2.5.1.0-b153 –name yugabyte 部署yugabyte kubectl create namespace yb-demo helm install yb-demo yugabytedb/yugabyte --namespace yb-demo --wait Check cluster status with kubectl kubectl --namespace yb-demo get pods kubectl --namespace yb-demo get services Check cluster status with Admin UI kubectl --namespace yb-demo port-forward --address 0.0.0.0 svc/yb-master-ui 7000:7000 \u0026 Run YSQL shell from inside of a tablet server kubectl exec --namespace yb-demo -it yb-tserver-0 -- /home/yugabyte/bin/ysqlsh -h yb-tserver-0.yb-tservers.yb-demo Connect yugabute outside cluster kubectl --namespace yb-demo port-forward --address 0.0.0.0 svc/yb-tservers 5433:5433 \u0026 Cleanup YugabyteDB Pods helm delete yb-demo -n yb-demo NOTE: You need to manually delete the persistent volume kubectl delete pvc –namespace yb-demo -l app=yb-master kubectl delete pvc –namespace yb-demo -l app=yb-tserver ","date":"2021-02-23","objectID":"/mysite-public/deploy-yugabyte-on-k8s/:0:0","tags":["Tools"],"title":"Deploy Yugabyte On K8s","uri":"/mysite-public/deploy-yugabyte-on-k8s/"},{"categories":["Tools"],"content":"配置网络 查看并连接设备 nmcli d nmcli d connect xxx 查看并配置连接 nmcli c nmcli c modify ens192 ipv4.address x.x.x.x/24 ipv4.gateway x.x.x.x ipv4.dns 8.8.8.8 ipv4.method manual connection.autoconnect yes 114.114.114.114 cat not resolve gcr.io etc, but 8.8.8.8 can 启用连接 nmcli c reload nmcli c up xxx ","date":"2021-02-22","objectID":"/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/:0:0","tags":["Tools"],"title":"Centos8工作环境配置","uri":"/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"categories":["Tools"],"content":"Centos8 源设置 dnf config-manager --add-repo https://mirrors.aliyun.com/repo/Centos-8.repo 安装docker 安装docker dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo dnf repolist -v dnf install -y docker-ce --nobest --allowerasing 设置国内源 vim /etc/docker/daemon.json { \"registry-mirrors\": [\"https://docker.mirrors.ustc.edu.cn/\",\"https://hub-mirror.c.163.com\"] } docker info Run docker without sudo useradd xxx passwd xxx usermod -aG docker xxx \u0026\u0026 newgrp docker 开机启动docker sudo systemctl enable –now docker 安装Golang 卸载旧版本 rm -rf /usr/local/go 安装新版本 官网下载安装包 tar -C /usr/local -xzf gox.xx.x.linux-amd64.tar.gz 设置环境变量 vim $HOME/.bash_profile export PATH=$PATH:/usr/local/go/bin ","date":"2021-02-22","objectID":"/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/:0:1","tags":["Tools"],"title":"Centos8工作环境配置","uri":"/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"categories":["Tools"],"content":"安装vnc 参考Centos8安装VNC ","date":"2021-02-22","objectID":"/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/:0:2","tags":["Tools"],"title":"Centos8工作环境配置","uri":"/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"categories":["Tools"],"content":"安装git 安装git包 dnf install git 配置ssh key if [ ! -e /root/.ssh/id_rsa ];then ssh-keygen -t rsa -P '' -f /root/.ssh/id_rsa fi 把公钥添加到 github(setting\u003essh and gpg keys\u003enew ssh key) 测试连接 ssh -T git@github.com 安装Hugo 参考hugo的使用 本地k8s集群配置 安装kubectl curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" curl -LO \"https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256\" echo \"$(\u003ckubectl.sha256) kubectl\" | sha256sum --check sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl 下载特定版本kind curl -Lo ./kind \"https://kind.sigs.k8s.io/dl/v0.10.0/kind-$(uname)-amd64\" chmod +x ./kind mv ./kind /usr/local/bin/kind 创建三worker节点k8s集群 vi kind.yaml kind: Cluster apiVersion: kind.x-k8s.io/v1alpha4 # One control plane node and three \"workers\". # # While these will not add more real compute capacity and # have limited isolation, this can be useful for testing # rolling updates etc. # # The API-server and other control plane components will be # on the control-plane node. # # You probably don't need this unless you are testing Kubernetes itself. nodes: - role: control-plane - role: worker - role: worker - role: worker kind create cluster –config=kind.yaml –name yugabyte 安装Helm curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 chmod 700 get_helm.sh ./get_helm.sh Istio配置 Install istioctl curl -sL https://istio.io/downloadIstioctl | sh - export PATH=$PATH:$HOME/.istioctl/bin Install istio kubectl create ns istio-system kubectl apply -f - \u003c\u003cEOF apiVersion: install.istio.io/v1alpha1 kind: IstioOperator metadata: namespace: istio-system name: example-istiocontrolplane spec: profile: demo EOF Confirm the Istio control plane services kubectl get svc -n istio-system kubectl get pods -n istio-system Knative配置 Installing the Knative Operator kubectl apply -f https://github.com/knative/operator/releases/download/v0.20.0/operator.yaml Verify the operator installation kubectl get deployment knative-operator Track the log kubectl logs -f deploy/knative-operator ","date":"2021-02-22","objectID":"/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/:0:3","tags":["Tools"],"title":"Centos8工作环境配置","uri":"/mysite-public/centos8%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"},{"categories":["Tools"],"content":"配置如下: 散热 海盗船h60 378.9 电源 海盗船sf600 698.9 机箱 追风者217e 700 主板 华硕rog z390i 1869 显示器 dell2419 1498.5 硬盘 三星970evo500g 879 硅脂 猫头鹰nt-h1 18.9 cpu 9700k散片 2459 无线网卡 dell dw1560（bcm94352z） 185S 键盘鼠标自备 内存 同事闲置 注意事项： 系统安装：第一阶段通过u盘安装到硬盘。安装过程中会重启，此时需按热键选择启动设备（asus 为F8） ，选择通过u盘启动，在引导界面选择硬盘名称，完成第二阶段安装。第二阶段安装完成后使用multibeast\\ kextbeast\\ clover configurator \\clever等工具安装clever及驱动，完成post Installation. clover configurator已能自动升级clover ,升级kexts kextBeast使用方法:把kext文件放到桌面，然后运行kentbeast程序即可. 升级EFI时：backup your existing, working EFI folder. Copy/paste your Serial, Board Serial, UUID, and Memory settings to the new config.plist. drivers64uefi 放一些启动时的驱动，比如apfs **删除kext:**delete the extra kext from /Library/Extensions, then do a rebuild of your kextcache using this command in terminal:sudo kextcache -i / sudo kextstat kext utility 解决权限问题，重建缓存 工具： unibeast (tonymacx86) multibeast (tonymacx86) kextbeast (tonymacx86) kent utility Clover Configurator (tonymacx86) geekbench hackintool 原intel FB Patcher 文件： clover （tonymacx86） kexts (tonymacx86 …) SSDT-UIAC.aml （tonymacx86） FakeSMC 后续可能被virtualsmc取代 Lilu WhateverGreen AppleALC 后续可能集成到whatevergreen usbinjectall DW1560: BrcmPatchRam BrcmFirmwareRepo.kext AirportBrcmFixup.kext 参考文档 主要参考如下两篇文章 tonymacx86 果黑小兵的部落阁 Kent安装及使用 https://www.tonymacx86.com/threads/guide-installing-3rd-party-kexts-el-capitan-sierra-high-sierra-mojave.268964/ BIOS设置参考 https://www.tonymacx86.com/threads/asus-rog-strix-z390-i-gaming-motherboard-specs.259848/page-24 https://www.tonymacx86.com/threads/pastrychefs-asus-rog-strix-z370-g-gaming-wi-fi-ac-build-w-i9-9900k-amd-vega-56.239969/ Advanced/CPU Configuration/Intel Virtualization Technology - Enabled Advanced/System Agent (SA) Configuration/VT-d - Disabled Advanced/System Agent (SA) Configuration/Graphics Configuration/Primary Display - PCIE (This will not be available if you are only using UHD 630.) Advanced/System Agent (SA) Configuration/Graphics Configuration/iGPU Multi-Monitor - Enabled (This will not be available if you are only using UHD 630.) Advanced/System Agent (SA) Configuration/Graphics Configuration/RC6(Render Standby) - Enabled Advanced/System Agent (SA) Configuration/Graphics Configuration/DVMT Pre-Allocated - 192M (64M should also work) Advanced/USB Configuration/Legacy USB Support - Enabled Advanced/USB Configuration/USB Keyboard and Mouse Simulator - Disabled Boot/CSM (Compatibility Support Module)/ Launch CSM - Enabled (Updated January 22, 2018: I originally used Disabled because it would allow Clover to boot in to the monitor’s native resolution. Since then, I have found that Enabling CSM gives better compatibility with devices such as AQC107 and multi monitor support albeit at the loss of native resolution for the Clover boot menu. Bottom line, try both and use the one that works best with your hardware.) Boot/Secure Boot/ OS Type - Other OS (Optional)Ai Tweaker/Ai Overclock Tuner - XMP usb: 使用ssdt文件（SSDT-UIAC.aml） put it in EFI/Clover/ACPI/patched, which will limit USB ports within 15 ports. Notice: Due to 15 ports limits, one of the Front USB Port can only read USB3.0. 参考 https://www.tonymacx86.com/threads/asus-rog-strix-z390-i-gaming-motherboard-specs.259848/page-22 https://www.tonymacx86.com/threads/guide-creating-a-custom-ssdt-for-usbinjectall-kext.211311/ https://www.tonymacx86.com/threads/xhc-usb-kext-creation-guideline.242999/ 升级clover try to only have the efi partition of the target drive mointed 挂载EFI分区步骤： diskutil list sudo diskutil mount … 或者通过clover configuator 挂载 安装步骤： 参考Tonymacx86 相应版本guide Maintenance \u0026 Future Updates Always check the forum to see if new versions of macOS break anything. Check for updates to: Everything in /EFI/CLOVER/kexts/Other/ Clover apfs.efi which is located in /EFI/CLOVER/drivers64UEFI/ (No longer needed. Superseded by ApfsDriverLoader.efi.) Of particular interest to this build are: Clover EFI bootloader FakeSMC.kext USBInjectAll.kext XHCI-200-series-injector.kext (Use the XHCI-200-series-injector.kext because it matches our a2af Devi","date":"2021-01-20","objectID":"/mysite-public/asus-rog-strix-z390-i-gaming-hakintosh/:0:0","tags":["Tools"],"title":"ASUS ROG STRIX Z390 I GAMING Hakintosh","uri":"/mysite-public/asus-rog-strix-z390-i-gaming-hakintosh/"},{"categories":["Tools"],"content":"celedhrim版kodi-server centos 系统 docker pull celedhrim/kodi-server docker run -d --restart=\"always\" --net=host --privileged -v /tmp/kodi:/opt/kodi-server/share/kodi/portable_data celedhrim/kodi-server 不加–privileged 容器会不断重启,docker logs显示 Could not init logging classes. Log folder error (/opt/kodi-server/share/kodi/portable_data/temp/) ERROR: Unable to create application. Exiting Attention: /tmp/kodi换成要保存kodi配置文件的目录 linuxserver.io headless版 centos系统 有问题上linuxserver.io论坛找;unraid论坛forums.lime-technology.com也有相关的东西; 好处： 配置和程序分离，方便升级版本； 库由mysql/mariadb集中管理，每个docker kodi instances都从db里获取信息，库更新后，都能看到一样的东西； 在一个客户端操作后，或更新文件后，所有客户端能看到最新状态，比如tv看到多少分钟停下的； Attention: 不要docker clean library ，通过任意一个clinet做 docker pull linuxserver/kodi-headless mkdir /root/kodi docker run -d --restart=\"always\" --net=host --privileged --name=kodi-headless -v /root/kodi:/config/.kodi -p 8080:8080 -p 9777:9777/udp -e PGID=0 -e PUID=0 linuxserver/kodi-headless 不加–privileged会报错，不能生成配置文件;–name 会给容器命名，好识别，好链接 第一次运行后会在/root/kodi下生成配置文件，确认生成后停掉kodi-headless 可以加-e TZ=Asia/Shanghai修改时区，没有尝试 docker stop kodi-headless 根据自己情况修改配置文件advancedsettings.xml docker start kodi-headless 这时gui还是不能访问,修改 guisettings.xml里addonupdates 0到2,仍不能访问 systemctl stop firewalld.service systemctl disable firewalld.service 关闭防火墙后，可以访问了。 Mac系统 docker pull linuxserver/kodi-headless docker pull linuxserver/mariadb mkdir /Users/rencc/Kodi docker run -d --restart=\"always\" --net=host --privileged --name=kodi-headless -v /Users/rencc/Kodi:/config/.kodi -p 8080:8080 -p 9777:9777/udp -e PUID=501 -e PGID=20 -e TZ=Asia/Shanghai linuxserver/kodi-headless Docker logs containeridxxxxxxxxxxxx可以看到服务已经启动 ls /Users/rencc/Kodi发现下面已经生成配置文件了 后续可通过如下命令启停 docker stop kodi-headless docker start kodi-headless ","date":"2021-01-20","objectID":"/mysite-public/kodi%E7%9A%84%E4%BD%BF%E7%94%A8/:0:0","tags":["Tools"],"title":"Kodi的使用","uri":"/mysite-public/kodi%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"docker pull emby/embyserver # cat emby.sh docker run -d \\ --name embyserver \\ --volume /root/emby/programdata:/config \\ --volume /data/Entbak:/mnt/Entbak \\ --volume /data/Video:/mnt/Video \\ --volume /data/Moives:/mnt/Moives \\ --volume /data/Pictures:/mnt/Pictures \\ --volume /data/Music:/mnt/Music \\ --volume /data/Photos:/mnt/Photos \\ --volume /data/Private:/mnt/Private \\ --volume /data/TV:/mnt/TV \\ --publish 8096:8096 \\ --publish 8920:8920 \\ --env UID=0 \\ --env GID=0 \\ --env GIDLIST=0 \\ docker.io/emby/embyserver:4.1.0.23 # ","date":"2021-01-19","objectID":"/mysite-public/%E5%AE%89%E8%A3%85emby/:0:0","tags":["Tools"],"title":"安装emby","uri":"/mysite-public/%E5%AE%89%E8%A3%85emby/"},{"categories":["Tools"],"content":"0.把用户是公钥导入gitlab；hosts文件加入git服务器解析 Attention: 注意remote url类型 1.在需要保存仓库的父目录下 git init git remote git remote add origin ssh://git@xxx.xxx.xxx:2222/xxx/xxx.git git remote set-url origin ssh://git@xxx.xxx.xxx:2222/xxx/xxx.git git remote -v git config --list git config --global user.email xxx@xxx git config --global user.name xxx git config --list git config --global http.sslVerify false git config --global http.postBuffer 1048576000 git clone ssh://git@xxx.xxx.xxx:2222/xxx/xxx.git git add . git status git commit -m \"comment\" git push origin master 若需添加其他仓库 git remote add gitlab2 https：//xxx.xxx/xxx/xxx.git git remote add github https：//gitee.com/xxx/xxx.git git remote add gitee https：//gitee.com/xxx/xxx.git ","date":"2021-01-19","objectID":"/mysite-public/gitlab%E7%9A%84%E4%BD%BF%E7%94%A8/:0:0","tags":["Tools"],"title":"Gitlab的使用","uri":"/mysite-public/gitlab%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["documentation"],"content":" I am working in an environment where I have an account on multiple linux machines where accounts and passwords are managed independently (no active directory/LDAP/etc) and passwords expire every 30 days. As such, I thought it would be easier to manage my authentication using ssh keys. I am able to authenticate using my ssh keys just fine. However, I found that when my password expires, I am prompted to change my password when I try to connect using my ssh key. Is this normal behavior? I thought the whole point of using key pairs is to bypass using your password. Shouldn’t I only be prompted to change my password if I login using a password? Linux服务器用户的密码有过期设置，需定期修改密码。 凭直觉，可以通过秘钥登录，避免密码过期后，必须修改密码才能进行其他操作,同时也利于编写自动化脚本。 然而,当密码过期后，通过秘钥登录时，也会提示修改密码。 那么问题来了。 这正常吗？使用秘钥登录不是绕过密码? 如果正常，怎么避免使用key登录还提示修改密码？ 答案是正常的。可以通过修改Linux-PAM及pam_unix配置解决。 解决方案： 修改/etc/pam.d/sshd文件。 老配置： account required pam_nologin.so account include password-auth password include password-auth 新配置： account required pam_nologin.so account sufficient pam_unix.so no_pass_expiry account include password-auth password sufficient pam_unix.so no_pass_expiry password include password-auth Reference: Forced to change expired password when using ssh key Expired password and SSH key based login with UsePAM yes PAM 教程 ","date":"2021-01-08","objectID":"/mysite-public/forced-to-change-expired-password-when-using-ssh-key/:0:0","tags":["Linux"],"title":"Forced to Change Expired Password When Using Ssh Key","uri":"/mysite-public/forced-to-change-expired-password-when-using-ssh-key/"},{"categories":["Tools"],"content":"Centos8 配置VNC ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:0","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"安装 TigerVNC server dnf install tigervnc-server ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:1","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"防火墙放行VNC服务 firewall-cmd --add-service=vnc-server --permanent firewall-cmd --reload ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:2","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"配置VNC 用户 vi /etc/tigervnc/vncserver.users 添加用户，如： :1=root ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:3","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"配置分辨率 mkdir $HOME/.vnc vi $HOME/.vnc/config geometry=1920x1080 ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:4","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"设置VNC用户密码 vncpasswd set “view-only password”, press ‘n’ key ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:5","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"启动服务 systemctl enable vncserver@:1 systemctl start vncserver@:1 systemctl status vncserver@:1 ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:6","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"连接到远程设备 vnc viewer xxx.xxx.xxx.xxx:1 ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:7","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"参考 https://www.adamormsby.com/posts/how-to-set-up-a-hugo-site-on-github-pages-with-submodules/ ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:0","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"安装hugo github 下载linux安装包 注意：下载extend版 解压后把二进制文件复制到/usr/bin/ ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:1","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"create new site #### hugo new site [SITE_NAME] hugo new site mysite ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:2","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"github 建新repo Enter the project folder. cd mysite Initialize git locally. git init Set our new Github repo as the remote for our local project #git remote add origin https://github.com/GITHUB_USERNAME/SOURCE_REPO_NAME.git git remote add origin https://github.com/charlesren/mysite.git Stage all files for commit. git add . Commit files. git commit -m \"committing our hugo template\" Push to the remote master git push -u origin master ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:3","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"创建 Live Site Data Repository #git submodule add https://github.com/GITHUB_USERNAME/PUBLIC_REPO_NAME.git public git submodule add https://github.com/charlesren/mysite-public.git public 删除原public目录下文件 rm -rf ./public/* Perform a site build and output to ‘public/’ directory. hugo cd public git add . git commit -m \"first build\" Return to the project root. cd ../ commit change git add . git commit -m \"first build - update submodule reference\" Push the source project and the public submodule to Github together. git push -u origin master --recurse-submodules=on-demand ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:4","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"Add a Theme to Our Site Make a fork of the Hello Friend theme so we have our own copy of it. 这里fork https://github.com/dillonzq/LoveIt fork 后地址： https://github.com/charlesren/LoveIt Add our forked repo as a submodule in our main project’s themes folder. Add the theme submodule from the root project folder my sample URL - https://github.com/aormsby/F-hugo-theme-hello-friend.git git submodule add https://github.com/GITHUB_USERNAME/FORKED_THEME_REPO_NAME.git themes/hello-friend git submodule add https://github.com/charlesren/LoveIt.git themes/LoveIt 修改config.toml cp themes/LoveIt/exampleSite/config.toml . sed -i 's/^themesDir = .*/themesDir = \"themes\"/' config.toml # Because we’re making a Github ‘project site’ we want to change thebaseURL to match our project URL. ##baseURL = [GITHUB_USER_NAME].github.io/[PROJECT_NAME] #实际URL 为 baseURL = https://charlesren.github.io/mysite-public/ sed -i 's|^baseURL = .*|baseURL = \"https://charlesren.github.io/mysite-public/\"|' config.toml sed -i 's|^title = .*|title = \"CharlesRen\"|' config.toml sed -i 's|Email = \"xxxx@xxxx.com\".*|Email = \"renccn@gmail.com\"|g' config.toml sed -i 's|Email = \"xxxx@xxxx.com\".*|Email = \"renccn@gmail.com\"|g' config.toml ## subtitle = \"Focus on Cloud Native,Golang,Speculate in Stocks\" ## subtitle = \"专注于云原生、Go语言、股票投机\" # Header config name = \"CharlesRen\" ## [author] name = \"CharlesRen\" email = \"renccn@gmail.com\" link = \"https://charlesren.github.io/mysite-public/\" ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:5","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"Test Site and Deploy hugo cd public git add . git commit -m \"build with theme\" cd ../ git add . git commit -m \"build with theme - update submodule reference\" git push -u origin master --recurse-submodules=on-demand 至此站点已完成，但没有内容 ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:6","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"添加about页 hugo new about.md vi content/about.md 注意：生成静态网站时，hugo会忽略所有通过 draft: true 标记为草稿的文件。必须改为 draft: false 才会编译进 HTML 文件。 否则，生成的网站没有文章 ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:7","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"添加其他posts hugo new posts/fistPage.md 注意：生成静态网站时，hugo会忽略所有通过 draft: true 标记为草稿的文件。必须改为 draft: false 才会编译进 HTML 文件。 否则，生成的网站没有文章 ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:8","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"问题 问题一 Error: Error building site: failed to render pages: render of “page” failed: execute of template failed: template: _default/single.html:18:124: executing “content” at \u003cpartial “function/content.html”\u003e: error calling partial: “/data/mysite/themes/LoveIt/layouts/partials/function/content.html:4:19”: execute of template failed: template: partials/function/content.html:4:19: executing “partials/function/content.html” at \u003cpartial “function/ruby.html” $content\u003e: error calling partial: partial that returns a value needs a non-zero argument. 解决方案 ： https://github.com/dillonzq/LoveIt/pull/519/files 问题二 about页面不显示 解决方案:config.toml写绝对地址 问题三 文章自动分类到标签、分类、文档 解决方案：文章前加tags\\ categories ---title:\"Firstpg\"date:2020-11-26T16:45:15+08:00draft:falsetags:[\"cncf\"]categories:[\"cncf\",\"documentation\"]--- 如已通过本文建站，在别的设备上只需clone my-site,public,Loveit主题,即可使用 ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:9","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"}]