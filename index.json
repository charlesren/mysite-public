[{"categories":["Tools"],"content":"celedhrim版kodi-server Centos 系统 docker pull celedhrim/kodi-server docker run -d –restart=“always” –net=host –privileged -v /tmp/kodi:/opt/kodi-server/share/kodi/portable_data celedhrim/kodi-server 不加–privileged 容器会不断重启,docker logs显示 Could not init logging classes. Log folder error (/opt/kodi-server/share/kodi/portable_data/temp/) ERROR: Unable to create application. Exiting /tmp/kodi换成要保存kodi配置文件的目录 -v 还可以把共享文件映射到docker内 linuxserver.io headless版 centos系统 有问题上linuxserver.io论坛找，unraid论坛forums.lime-technology.com也有相关的东西 好处：配置和程序分离，方便升级版本； 库由mysql/mariadb集中管理，每个docker kodi instances都从db里获取信息，库更新后，都能看到一样的东西；在一个客户端操作后，或更新文件后，所有客户端能看到最新状态，比如tv看到多少分钟停下的； 不要通过docker clean library ，通过任意一个clinet做 docker pull linuxserver/kodi-headless mkdir /root/kodi docker run -d --restart=\"always\" --net=host --privileged --name=kodi-headless -v /root/kodi:/config/.kodi -p 8080:8080 -p 9777:9777/udp -e PGID=0 -e PUID=0 linuxserver/kodi-headless 不加–privileged会报错，不能生成配置文件;–name 会给容器命名，好识别，好链接 第一次运行后会生成配置文件，在/root/kodi下，检查生成后停掉kodi-headless 可以加-e TZ=Asia/Shanghai，没有尝试 docker stop kodi-headless 根据自己情况修改配置文件advancedsettings.xml docker start kodi-headless 这时gui还是不能访问 修改 guisettings.xml里addonupdates 0到2 仍不能访问gui systemctl stop firewalld.service systemctl disable firewalld.service Mac系统 docker pull linuxserver/kodi-headless docker pull linuxserver/mariadb mkdir /Users/rencc/Kodi docker run -d --restart=\"always\" --net=host --privileged --name=kodi-headless -v /Users/rencc/Kodi:/config/.kodi -p 8080:8080 -p 9777:9777/udp -e PUID=501 -e PGID=20 -e TZ=Asia/Shanghai linuxserver/kodi-headless 通过Docker logs containeridxxxxxxxxxxxx可以看到服务已经启动 ls /Users/rencc/Kodi 发现下面已经生成配置文件了 后续通过如下命令启停 docker stop kodi-headless docker start kodi-headless ","date":"2021-01-20","objectID":"/mysite-public/kodi%E7%9A%84%E4%BD%BF%E7%94%A8/:0:0","tags":["Tools"],"title":"Kodi的使用","uri":"/mysite-public/kodi%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"docker pull emby/embyserver # cat emby.sh docker run -d \\ --name embyserver \\ --volume /root/emby/programdata:/config \\ --volume /data/Entbak:/mnt/Entbak \\ --volume /data/Video:/mnt/Video \\ --volume /data/Moives:/mnt/Moives \\ --volume /data/Pictures:/mnt/Pictures \\ --volume /data/Music:/mnt/Music \\ --volume /data/Photos:/mnt/Photos \\ --volume /data/Private:/mnt/Private \\ --volume /data/TV:/mnt/TV \\ --publish 8096:8096 \\ --publish 8920:8920 \\ --env UID=0 \\ --env GID=0 \\ --env GIDLIST=0 \\ docker.io/emby/embyserver:4.1.0.23 # ","date":"2021-01-19","objectID":"/mysite-public/%E5%AE%89%E8%A3%85emby/:0:0","tags":["Tools"],"title":"安装emby","uri":"/mysite-public/%E5%AE%89%E8%A3%85emby/"},{"categories":["Tools"],"content":"0.把用户是公钥导入gitlab；hosts文件加入git服务器解析 1.在需要保存仓库的父目录下 git init git remote git remote add origin ssh://git@xxx.xxx.xxx:2222/xxx/xxx.git git remote set-url origin ssh://git@xxx.xxx.xxx:2222/xxx/xxx.git git remote -v git config --list git config --global user.email xxx@xxx git config --global user.name xxx git config --list git config --global http.sslVerify false git config --global http.postBuffer 1048576000 git clone ssh://git@xxx.xxx.xxx:2222/xxx/xxx.git git add . git status git commit -m \"comment\" git push origin master 若需添加其他仓库 git remote add gitlab2 https：//xxx.xxx/xxx/xxx.git git remote add github https：//gitee.com/xxx/xxx.git git remote add gitee https：//gitee.com/xxx/xxx.git ","date":"2021-01-19","objectID":"/mysite-public/gitlab%E7%9A%84%E4%BD%BF%E7%94%A8/:0:0","tags":["Tools"],"title":"Gitlab的使用","uri":"/mysite-public/gitlab%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["documentation"],"content":" I am working in an environment where I have an account on multiple linux machines where accounts and passwords are managed independently (no active directory/LDAP/etc) and passwords expire every 30 days. As such, I thought it would be easier to manage my authentication using ssh keys. I am able to authenticate using my ssh keys just fine. However, I found that when my password expires, I am prompted to change my password when I try to connect using my ssh key. Is this normal behavior? I thought the whole point of using key pairs is to bypass using your password. Shouldn’t I only be prompted to change my password if I login using a password? Linux服务器用户的密码有过期设置，需定期修改密码。 凭直觉，可以通过秘钥登录，避免密码过期后，必须修改密码才能进行其他操作,同时也利于编写自动化脚本。 然而,当密码过期后，通过秘钥登录时，也会提示修改密码。 那么问题来了。 这正常吗？使用秘钥登录不是绕过密码? 如果正常，怎么避免使用key登录还提示修改密码？ 答案是正常的。可以通过修改Linux-PAM及pam_unix配置解决。 解决方案： 修改/etc/pam.d/sshd文件。 老配置： account required pam_nologin.so account include password-auth password include password-auth 新配置： account required pam_nologin.so account sufficient pam_unix.so no_pass_expiry account include password-auth password sufficient pam_unix.so no_pass_expiry password include password-auth Reference: Forced to change expired password when using ssh key Expired password and SSH key based login with UsePAM yes PAM 教程 ","date":"2021-01-08","objectID":"/mysite-public/forced-to-change-expired-password-when-using-ssh-key/:0:0","tags":["Linux"],"title":"Forced to Change Expired Password When Using Ssh Key","uri":"/mysite-public/forced-to-change-expired-password-when-using-ssh-key/"},{"categories":["Tools"],"content":"Centos8 配置VNC ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:0","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"安装 TigerVNC server dnf install tigervnc-server ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:1","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"防火墙放行VNC服务 firewall-cmd --add-service=vnc-server --permanent firewall-cmd --reload ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:2","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"配置VNC 用户 vi /etc/tigervnc/vncserver.users 添加用户，如： ：1=root ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:3","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"配置分辨率 vi $HOME/.vnc/config geometry=1920x1080 ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:4","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"设置VNC用户密码 vncpasswd set “view-only password”, press ‘n’ key ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:5","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"启动服务 systemctl start vncserver@:1 systemctl status vncserver@:1 ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:6","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"连接到远程设备 vnc viewer xxx.xxx.xxx.xxx:1 ","date":"2020-11-30","objectID":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/:0:7","tags":["Tools"],"title":"Centos8安装VNC","uri":"/mysite-public/centos8%E5%AE%89%E8%A3%85vnc/"},{"categories":["Tools"],"content":"参考 https://www.adamormsby.com/posts/how-to-set-up-a-hugo-site-on-github-pages-with-submodules/ ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:0","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"安装hugo github 下载linux安装包 注意：下载extend版 解压后把二进制文件复制到/usr/bin/ ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:1","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"create new site #### hugo new site [SITE_NAME] hugo new site mysite ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:2","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"github 建新repo Enter the project folder. cd mysite Initialize git locally. git init Set our new Github repo as the remote for our local project #git remote add origin https://github.com/GITHUB_USERNAME/SOURCE_REPO_NAME.git git remote add origin https://github.com/charlesren/mysite.git Stage all files for commit. git add . Commit files. git commit -m \"committing our hugo template\" Push to the remote master git push -u origin master ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:3","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"创建 Live Site Data Repository #git submodule add https://github.com/GITHUB_USERNAME/PUBLIC_REPO_NAME.git public git submodule add https://github.com/charlesren/mysite-public.git public 删除原public目录下文件 rm -rf ./public/* Perform a site build and output to ‘public/’ directory. hugo cd public git add . git commit -m \"first build\" Return to the project root. cd ../ commit change git add . git commit -m \"first build - update submodule reference\" Push the source project and the public submodule to Github together. git push -u origin master --recurse-submodules=on-demand ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:4","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"Add a Theme to Our Site Make a fork of the Hello Friend theme so we have our own copy of it. 这里fork https://github.com/dillonzq/LoveIt fork 后地址： https://github.com/charlesren/LoveIt Add our forked repo as a submodule in our main project’s themes folder. Add the theme submodule from the root project folder my sample URL - https://github.com/aormsby/F-hugo-theme-hello-friend.git git submodule add https://github.com/GITHUB_USERNAME/FORKED_THEME_REPO_NAME.git themes/hello-friend git submodule add https://github.com/charlesren/LoveIt.git themes/LoveIt 修改config.toml cp themes/LoveIt/exampleSite/config.toml . sed -i 's/^themesDir = .*/themesDir = \"themes\"/' config.toml # Because we’re making a Github ‘project site’ we want to change thebaseURL to match our project URL. ##baseURL = [GITHUB_USER_NAME].github.io/[PROJECT_NAME] #实际URL 为 baseURL = https://charlesren.github.io/mysite-public/ sed -i 's|^baseURL = .*|baseURL = \"https://charlesren.github.io/mysite-public/\"|' config.toml sed -i 's|^title = .*|title = \"CharlesRen\"|' config.toml sed -i 's|Email = \"xxxx@xxxx.com\".*|Email = \"renccn@gmail.com\"|g' config.toml sed -i 's|Email = \"xxxx@xxxx.com\".*|Email = \"renccn@gmail.com\"|g' config.toml ## subtitle = \"Focus on Cloud Native,Golang,Speculate in Stocks\" ## subtitle = \"专注于云原生、Go语言、股票投机\" # Header config name = \"CharlesRen\" ## [author] name = \"CharlesRen\" email = \"renccn@gmail.com\" link = \"https://charlesren.github.io/mysite-public/\" ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:5","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"Test Site and Deploy hugo cd public git add . git commit -m \"build with theme\" cd ../ git add . git commit -m \"build with theme - update submodule reference\" git push -u origin master --recurse-submodules=on-demand 至此站点已完成，但没有内容 ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:6","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"添加about页 hugo new about.md vi content/about.md 注意：生成静态网站时，hugo会忽略所有通过 draft: true 标记为草稿的文件。必须改为 draft: false 才会编译进 HTML 文件。 否则，生成的网站没有文章 ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:7","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"添加其他posts hugo new posts/fistPage.md 注意：生成静态网站时，hugo会忽略所有通过 draft: true 标记为草稿的文件。必须改为 draft: false 才会编译进 HTML 文件。 否则，生成的网站没有文章 ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:8","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"categories":["Tools"],"content":"问题 问题一 Error: Error building site: failed to render pages: render of “page” failed: execute of template failed: template: _default/single.html:18:124: executing “content” at \u003cpartial “function/content.html”\u003e: error calling partial: “/data/mysite/themes/LoveIt/layouts/partials/function/content.html:4:19”: execute of template failed: template: partials/function/content.html:4:19: executing “partials/function/content.html” at \u003cpartial “function/ruby.html” $content\u003e: error calling partial: partial that returns a value needs a non-zero argument. 解决方案 ： https://github.com/dillonzq/LoveIt/pull/519/files 问题二 about页面不显示 解决方案:config.toml写绝对地址 问题三 文章自动分类到标签、分类、文档 解决方案：文章前加tags\\ categories ---title:\"Firstpg\"date:2020-11-26T16:45:15+08:00draft:falsetags:[\"cncf\"]categories:[\"cncf\",\"documentation\"]--- ","date":"2020-11-26","objectID":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/:0:9","tags":["Tools"],"title":"hugo的使用","uri":"/mysite-public/hugo%E7%9A%84%E4%BD%BF%E7%94%A8/"}]